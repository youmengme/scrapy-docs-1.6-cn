.. _topics-telnetconsole:

==============
Telnet 控制台
==============

.. module:: scrapy.extensions.telnet
   :synopsis: The Telnet Console

Scrapy配有内置的telnet控制台，用于检查和控制Scrapy运行过程。telnet控制台只是在Scrapy进程中运行的常规python shell，所以你可以从中做任何事情。

telnet控制台是一个 :ref:`内置Scrapy扩展
<topics-extensions-ref>` 默认启用，但你也可以根据需要禁用它。有关扩展本身的更多信息，请参阅
:ref:`topics-extensions-ref-telnetconsole`.

.. warning::
    通过公共网络使用telnet控制台是不安全的，因为telnet不提供任何传输层安全性。拥有用户名/密码身份验证不会改变它。.

    预期用途是在本地连接到正在运行的Scrapy蜘蛛（蜘蛛进程和telnet客户端在同一台计算机上）或通过安全连接（VPN，SSH隧道）连接。请避免在不安全的连接上使用telnet控制台，或使用 :setting:`TELNETCONSOLE_ENABLED`选项完全禁用它。

.. highlight:: none

如何访问telnet控制台
================================

Telnet控制台侦听
:setting:`TELNETCONSOLE_PORT` 设置中定义的TCP端口 ，默认为 ``6023``. 要访问控制台，您需要键入::

    telnet localhost 6023
    Trying localhost...
    Connected to localhost.
    Escape character is '^]'.
    Username:
    Password:  
    >>>

默认情况下，用户名为 ``scrapy`` 密码自动生成。自动生成的密码可以在scrapy日志中看到，例如下面的示例::

    2018-10-16 14:35:21 [scrapy.extensions.telnet] INFO: Telnet Password: 16f92501e8a59326

默认用户名和密码可以通过设置
:setting:`TELNETCONSOLE_USERNAME` 和 :setting:`TELNETCONSOLE_PASSWORD` 覆盖.

.. warning::
    用户名和密码仅提供有限的保护，因为telnet不使用安全传输 - 默认情况下，即使设置了用户名和密码，流量也不会加密。

您需要在Windows中默认安装的telnet程序，以及大多数Linux发行版。

telnet控制台中的可用变量
=========================================

telnet控制台就像在Scrapy进程中运行的常规Python shell一样，所以你可以做任何事情，包括导入新模块等。

但是，telnet控制台附带了一些为方便起见而定义的默认变量:

+----------------+-------------------------------------------------------------------+
| 快捷命令        | 描述                                                       |
+================+===================================================================+
| ``crawler``    | Scrapy Crawler (:class:`scrapy.crawler.Crawler` 对象)       |
+----------------+-------------------------------------------------------------------+
| ``engine``     | Crawler.engine 属性                                          |
+----------------+-------------------------------------------------------------------+
| ``spider``     | 活跃 spider                                                 |
+----------------+-------------------------------------------------------------------+
| ``slot``       | Engine 插槽                                                   |
+----------------+-------------------------------------------------------------------+
| ``extensions`` | Extension Manager (Crawler.extensions 属性)              |
+----------------+-------------------------------------------------------------------+
| ``stats``      | Stats Collector (Crawler.stats 属性)                     |
+----------------+-------------------------------------------------------------------+
| ``settings``   | Scrapy settings object (Crawler.settings 属性)           |
+----------------+-------------------------------------------------------------------+
| ``est``        | 打印Engine状态报告                               |
+----------------+-------------------------------------------------------------------+
| ``prefs``      | 用于内存调试（请参阅 :ref:`topics-leaks`)                    |
+----------------+-------------------------------------------------------------------+
| ``p``          | `pprint.pprint`_ 函数的快捷方式                      |
+----------------+-------------------------------------------------------------------+
| ``hpy``        | 用于内存调试（请参阅 :ref:`topics-leaks`)                    |
+----------------+-------------------------------------------------------------------+

.. _pprint.pprint: https://docs.python.org/library/pprint.html#pprint.pprint

Telnet控制台用法示例
=============================

以下是您可以使用telnet控制台执行的一些示例任务:

查看引擎状态
------------------

您可以使用Scrapy engine的 ``est()`` 方法使用telnet控制台快速显示其状态::

    telnet localhost 6023
    >>> est()
    Execution engine status

    time()-engine.start_time                        : 8.62972998619
    engine.has_capacity()                           : False
    len(engine.downloader.active)                   : 16
    engine.scraper.is_idle()                        : False
    engine.spider.name                              : followall
    engine.spider_is_idle(engine.spider)            : False
    engine.slot.closing                             : False
    len(engine.slot.inprogress)                     : 16
    len(engine.slot.scheduler.dqs or [])            : 0
    len(engine.slot.scheduler.mqs)                  : 92
    len(engine.scraper.slot.queue)                  : 0
    len(engine.scraper.slot.active)                 : 0
    engine.scraper.slot.active_size                 : 0
    engine.scraper.slot.itemproc_size               : 0
    engine.scraper.slot.needs_backout()             : False


暂停，恢复和停止Scrapy引擎
----------------------------------------

暂停::

    telnet localhost 6023
    >>> engine.pause()
    >>>

恢复::

    telnet localhost 6023
    >>> engine.unpause()
    >>>

停止::

    telnet localhost 6023
    >>> engine.stop()
    Connection closed by foreign host.

Telnet控制台信号
======================

.. signal:: update_telnet_vars
.. function:: update_telnet_vars(telnet_vars)

    在telnet控制台打开之前发送。您可以连接此信号以添加，删除或更新将在telnet本地命名空间中可用的变量。为此，您需要更新
    ``telnet_vars`` 处理程序中的 dict。

    :param telnet_vars: the dict of telnet variables
    :type telnet_vars: dict

Telnet 设置
===============

这些是控制telnet控制台行为的设置:

.. setting:: TELNETCONSOLE_PORT

TELNETCONSOLE_PORT
------------------

默认: ``[6023, 6073]``

用于telnet控制台的端口范围。如果设置为 ``None`` 或 ``0``, 则使用动态分配的端口。


.. setting:: TELNETCONSOLE_HOST

TELNETCONSOLE_HOST
------------------

默认: ``'127.0.0.1'``

telnet控制台应该监听的接口


.. setting:: TELNETCONSOLE_USERNAME

TELNETCONSOLE_USERNAME
----------------------

默认: ``'scrapy'``

用于telnet控制台的用户名


.. setting:: TELNETCONSOLE_PASSWORD

TELNETCONSOLE_PASSWORD
----------------------

默认: ``None``

用于telnet控制台的密码，默认行为是自动生成密码

